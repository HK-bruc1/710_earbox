  _SFC_MEMORY_START_ADDR = ABSOLUTE(0xc000000);
  __local_irq_enable = ABSOLUTE(0xff758);
  __local_irq_disable = ABSOLUTE(0xff75c);
  request_irq = ABSOLUTE(0xff760);
  lp_signature_set = ABSOLUTE(0xff764);
  memcpy = ABSOLUTE(0xff768);
  memmove = ABSOLUTE(0xff76c);
  memcmp = ABSOLUTE(0xff770);
  memset = ABSOLUTE(0xff774);
  memchr = ABSOLUTE(0xff778);
  strcmp = ABSOLUTE(0xff77c);
  ic_pll_init = ABSOLUTE(0xff780);
  sfc_suspend = ABSOLUTE(0xff784);
  sfc_resume = ABSOLUTE(0xff788);
  sfc_drop_cache = ABSOLUTE(0xff78c);
  sfc_boot = ABSOLUTE(0xff790);
  sfc_entry_continue_mode = ABSOLUTE(0xff794);
  ota_jump_mode = ABSOLUTE(0xff798);
  DcuInitial = ABSOLUTE(0xff79c);
  DcuFlushinvAll = ABSOLUTE(0xff7a0);
  DcuWaitIdle = ABSOLUTE(0xff7a4);
  IcuInitial = ABSOLUTE(0xff7a8);
  IcuFlushinvAll = ABSOLUTE(0xff7ac);
  IcuWaitIdle = ABSOLUTE(0xff7b0);
  DcuEnable = ABSOLUTE(0xff7b4);
  chip_crc16 = ABSOLUTE(0xff7b8);
  CrcDecode = ABSOLUTE(0xff7bc);
  mask_init = ABSOLUTE(0xff7c0);
  wdt_clear = ABSOLUTE(0xff7c4);
  nvram_set_boot_state = ABSOLUTE(0xff7c8);
  chip_reset = ABSOLUTE(0xff7cc);
  flash_poweron = ABSOLUTE(0xff7d0);
  flash_poweron_base = ABSOLUTE(0xff7d4);
  flash_poweroff = ABSOLUTE(0xff7d8);
  flash_poweroff_base = ABSOLUTE(0xff7dc);
  spi_io_mount = ABSOLUTE(0xff7e0);
  spi_io_unmount = ABSOLUTE(0xff7e4);
  get_sfc_read_mode = ABSOLUTE(0xff7e8);
  spi_port_io_init = ABSOLUTE(0xff7ec);
  spi_port_io_uninit = ABSOLUTE(0xff7f0);
  usb_slave_mode = ABSOLUTE(0xff7f4);
  uart_set_dma_dir = ABSOLUTE(0xff7f8);
  doe = ABSOLUTE(0xff7fc);
  LZ4_setStreamDecode = ABSOLUTE(0xff800);
  LZ4_decompress_safe_continue = ABSOLUTE(0xff804);
  LZ4_decompress_generic = ABSOLUTE(0xff808);
  LZ4_decompress_safe_usingDict = ABSOLUTE(0xff80c);
  dec_isd_cfg_ini = ABSOLUTE(0xff810);
  pcTaskName = ABSOLUTE(0xff814);
  uxTaskStack = ABSOLUTE(0xff818);
  uxTaskStackDepth = ABSOLUTE(0xff81c);
  os_init = ABSOLUTE(0xff820);
  os_current_task_prio = ABSOLUTE(0xff824);
  os_current_task_stask_size = ABSOLUTE(0xff828);
  os_time_get = ABSOLUTE(0xff82c);
  os_task_create_static = ABSOLUTE(0xff830);
  os_task_coreaffinityset = ABSOLUTE(0xff834);
  os_task_create_affinity_core = ABSOLUTE(0xff838);
  os_task_create = ABSOLUTE(0xff83c);
  os_time_dly = ABSOLUTE(0xff840);
  os_task_del_req = ABSOLUTE(0xff844);
  os_task_del_res = ABSOLUTE(0xff848);
  os_task_del = ABSOLUTE(0xff84c);
  os_taskq_post = ABSOLUTE(0xff850);
  os_taskq_accept = ABSOLUTE(0xff854);
  __os_taskq_pend = ABSOLUTE(0xff858);
  os_sem_create = ABSOLUTE(0xff85c);
  os_sem_del = ABSOLUTE(0xff860);
  rom_os_sem_pend = ABSOLUTE(0xff864);
  os_sem_post = ABSOLUTE(0xff868);
  os_sem_set = ABSOLUTE(0xff86c);
  os_sem_query = ABSOLUTE(0xff870);
  os_sem_valid = ABSOLUTE(0xff874);
  os_mutex_create = ABSOLUTE(0xff878);
  os_mutex_del = ABSOLUTE(0xff87c);
  rom_os_mutex_pend = ABSOLUTE(0xff880);
  os_mutex_post = ABSOLUTE(0xff884);
  os_mutex_valid = ABSOLUTE(0xff888);
  os_taskq_flush = ABSOLUTE(0xff88c);
  os_task_get_handle = ABSOLUTE(0xff890);
  OSInit = ABSOLUTE(0xff894);
  OSSchedLock = ABSOLUTE(0xff898);
  OSSchedUnlock = ABSOLUTE(0xff89c);
  os_time_tick = ABSOLUTE(0xff8a0);
  OS_SchedRoundRobin = ABSOLUTE(0xff8a4);
  OS_EventTaskRdy = ABSOLUTE(0xff8a8);
  OS_EventTaskWait = ABSOLUTE(0xff8ac);
  OS_EventTO = ABSOLUTE(0xff8b0);
  OS_Sched = ABSOLUTE(0xff8b4);
  OSUpdateIdleTime = ABSOLUTE(0xff8b8);
  prvGetExpectedIdleTime = ABSOLUTE(0xff8bc);
  os_taskq_post_msg = ABSOLUTE(0xff8c0);
  os_taskq_post_event = ABSOLUTE(0xff8c4);
  os_taskq_post_type = ABSOLUTE(0xff8c8);
  task_queue_post_event = ABSOLUTE(0xff8cc);
  task_queue_post_msg = ABSOLUTE(0xff8d0);
  task_queue_post = ABSOLUTE(0xff8d4);
  OSTaskQFlush = ABSOLUTE(0xff8d8);
  __OSTaskQFlushMsg = ABSOLUTE(0xff8dc);
  os_taskq_pend = ABSOLUTE(0xff8e0);
  os_taskq_pend_timeout = ABSOLUTE(0xff8e4);
  os_current_task_rom = ABSOLUTE(0xff8e8);
  OSTimeDly = ABSOLUTE(0xff8ec);
  OSTCBCur = ABSOLUTE(0x13bb0c);
  OSRunning = ABSOLUTE(0x13bb04);
  OSRdyTbl = ABSOLUTE(0x13bb00);
  OSIdleCtr = ABSOLUTE(0x13bafc);
  OSTCBHighRdy = ABSOLUTE(0x13bb08);
  OSTCBPrioTbl = ABSOLUTE(0x13bb10);
  idle_tcb = ABSOLUTE(0x13bc14);
  OSLockNesting = ABSOLUTE(0x13baf8);
  OSNextTaskUnblockTime = ABSOLUTE(0x13bc10);
  OS_Sw_Sf_Irq_Num = ABSOLUTE(0x13bab4);
  OSTaskCreate = ABSOLUTE(0xff8f0);
  os_taskq_del_type = ABSOLUTE(0xff8f4);
  pmalloc_init = ABSOLUTE(0xff8f8);
  pmalloc = ABSOLUTE(0xff8fc);
  pfree = ABSOLUTE(0xff900);
  pmalloc_get_unused_pages = ABSOLUTE(0xff904);
  get_physic_address = ABSOLUTE(0xff908);
  pmalloc_get_hdl = ABSOLUTE(0xff90c);
  vmm_init_ = ABSOLUTE(0xff910);
  vmalloc_ = ABSOLUTE(0xff914);
  vfree_ = ABSOLUTE(0xff918);
  vmem_get_phy_adr = ABSOLUTE(0xff91c);
  vmem_start = ABSOLUTE(0xff920);
  vmem_end = ABSOLUTE(0xff924);
  vmalloc_get_hdl = ABSOLUTE(0xff928);
  vmalloc_v2 = ABSOLUTE(0xff92c);
  vfree_v2 = ABSOLUTE(0xff930);
  vcopy_ = ABSOLUTE(0xff934);
  lock_vir_mem = ABSOLUTE(0xff938);
  unlock_vir_mem = ABSOLUTE(0xff93c);
  hw_mmu_disable = ABSOLUTE(0xff940);

#if CONFIG_CBUF_IN_MASKROM
  cbuf_read = ABSOLUTE(0xff944);
  cbuf_prewrite = ABSOLUTE(0xff948);
  cbuf_updata_prewrite = ABSOLUTE(0xff94c);
  cbuf_discard_prewrite = ABSOLUTE(0xff950);
  cbuf_write = ABSOLUTE(0xff954);
  cbuf_is_write_able = ABSOLUTE(0xff958);
  cbuf_write_alloc = ABSOLUTE(0xff95c);
  cbuf_write_updata = ABSOLUTE(0xff960);
  cbuf_read_alloc = ABSOLUTE(0xff964);
  cbuf_read_updata = ABSOLUTE(0xff968);
  cbuf_init = ABSOLUTE(0xff96c);
  cbuf_clear = ABSOLUTE(0xff970);
  cbuf_rewrite = ABSOLUTE(0xff974);
  cbuf_get_writeptr = ABSOLUTE(0xff978);
  cbuf_get_data_size = ABSOLUTE(0xff97c);
  cbuf_get_readptr = ABSOLUTE(0xff980);
  cbuf_read_goback = ABSOLUTE(0xff984);
  cbuf_get_data_len = ABSOLUTE(0xff988);
  cbuf_read_alloc_len = ABSOLUTE(0xff98c);
  cbuf_read_alloc_len_updata = ABSOLUTE(0xff990);
#endif

  get_aac_ops = ABSOLUTE(0xff994);
  bt_aac_eng_buf_size = ABSOLUTE(0xff998);
  aac_decoder_run = ABSOLUTE(0xff99c);
  bt_aac_eng_run = ABSOLUTE(0xff9a0);
  bt_aac_decode = ABSOLUTE(0xff9a4);
  aac_frame_decode = ABSOLUTE(0xff9a8);
  raw_data_block = ABSOLUTE(0xff9ac);
  output_to_PCM = ABSOLUTE(0xff9b0);
  output_to_PCM_S24 = ABSOLUTE(0xff9b4);
  reconstruct_channel_pair = ABSOLUTE(0xff9b8);
  reconstruct_single_channel = ABSOLUTE(0xff9bc);
  single_lfe_channel_element = ABSOLUTE(0xff9c0);
  channel_pair_element = ABSOLUTE(0xff9c4);
  ifilter_bank = ABSOLUTE(0xff9c8);
  individual_channel_stream = ABSOLUTE(0xff9cc);
  huffman_spectral_data = ABSOLUTE(0xff9d0);
  faad_imdct = ABSOLUTE(0xff9d4);
  mdct_tab_256 = ABSOLUTE(0xe6894);
  mdct_tab_2048 = ABSOLUTE(0xe6a94);
  sine_long_1024 = ABSOLUTE(0xe7a94);
  sine_short_128 = ABSOLUTE(0xe8a94);
  kbd_long_1024 = ABSOLUTE(0xe8c94);
  kbd_short_128 = ABSOLUTE(0xe9c94);
  Huffmancb_SCL = ABSOLUTE(0xe9ef8);
  num_swb_960_window = ABSOLUTE(0xea108);
  num_swb_1024_window = ABSOLUTE(0xea114);
  num_swb_128_window = ABSOLUTE(0xea120);
  swb_offset_1024_96 = ABSOLUTE(0xea12c);
  swb_offset_128_96 = ABSOLUTE(0xea180);
  swb_offset_1024_64 = ABSOLUTE(0xea19a);
  swb_offset_128_64 = ABSOLUTE(0xea1fa);
  swb_offset_1024_48 = ABSOLUTE(0xea214);
  swb_offset_128_48 = ABSOLUTE(0xea278);
  swb_offset_1024_32 = ABSOLUTE(0xea296);
  swb_offset_1024_24 = ABSOLUTE(0xea2fe);
  swb_offset_128_24 = ABSOLUTE(0xea35e);
  swb_offset_1024_16 = ABSOLUTE(0xea37e);
  swb_offset_128_16 = ABSOLUTE(0xea3d6);
  swb_offset_1024_8 = ABSOLUTE(0xea3f6);
  swb_offset_128_8 = ABSOLUTE(0xea448);
  swb_offset_1024_window = ABSOLUTE(0xea468);
  swb_offset_128_window = ABSOLUTE(0xea498);
  iq_table = ABSOLUTE(0xea4c8);
  tns_coef_0_3 = ABSOLUTE(0xea8cc);
  tns_coef_0_4 = ABSOLUTE(0xea90c);
  tns_coef_1_3 = ABSOLUTE(0xea94c);
  tns_coef_1_4 = ABSOLUTE(0xea98c);
  pow05_table = ABSOLUTE(0xea9cc);
  sample_rates = ABSOLUTE(0xe9e94);
  pred_sfb_max = ABSOLUTE(0xea9e8);
  tns_sbf_max = ABSOLUTE(0xea9f4);
  Huffmancb_1 = ABSOLUTE(0xeaa34);
  Huffmancb_2 = ABSOLUTE(0xeabcc);
  Huffmancb_3 = ABSOLUTE(0xead04);
  Huffmancb_4 = ABSOLUTE(0xeae3c);
  Huffmancb_5 = ABSOLUTE(0xeaf6c);
  Huffmancb_6 = ABSOLUTE(0xeb0b4);
  Huffmancb_7 = ABSOLUTE(0xeb1f4);
  Huffmancb_8 = ABSOLUTE(0xeb2ec);
  Huffmancb_9 = ABSOLUTE(0xeb3e4);
  Huffmancb_10 = ABSOLUTE(0xeb684);
  Huffmancb_11 = ABSOLUTE(0xeb914);
  AACcodeBookDTable = ABSOLUTE(0xebdd4);
  AAC_SFHUFF_TAB = ABSOLUTE(0xea100);
  get_wtgv2dec_ops = ABSOLUTE(0xff9d8);
  wtgv2_silk_Decode = ABSOLUTE(0xff9dc);
  wtgv2_silk_decode_frame = ABSOLUTE(0xff9e0);
  wtgv2_silk_decoder_set_fs = ABSOLUTE(0xff9e4);
  wtgv2_silk_decode_indices = ABSOLUTE(0xff9e8);
  wtgv2_silk_decode_pulses = ABSOLUTE(0xff9ec);
  wtgv2_silk_decode_parameters = ABSOLUTE(0xff9f0);
  wtgv2_silk_decode_core = ABSOLUTE(0xff9f4);
  wtgv2_silk_NLSF_CB_NB_MB = ABSOLUTE(0xeedf0);
  wtgv2_LSFCosTab_FIX_Q12 = ABSOLUTE(0xeecec);
  icdf_global_table = ABSOLUTE(0xef2e8);
  cryto_reset_bits_size = ABSOLUTE(0xff9f8);
  g_hash_function = ABSOLUTE(0xff9fc);
  f1_hash_function = ABSOLUTE(0xffa00);
  f2_hash_function = ABSOLUTE(0xffa04);
  f3_hash_function = ABSOLUTE(0xffa08);
  h2_hash_function = ABSOLUTE(0xffa0c);
  h3_hash_function = ABSOLUTE(0xffa10);
  h4_hash_function = ABSOLUTE(0xffa14);
  h5_hash_function = ABSOLUTE(0xffa18);
  g_function = ABSOLUTE(0xffa1c);
  f1_function = ABSOLUTE(0xffa20);
  f2_function = ABSOLUTE(0xffa24);
  f3_function = ABSOLUTE(0xffa28);
  h3_function = ABSOLUTE(0xffa2c);
  h4_function = ABSOLUTE(0xffa30);
  h5_function = ABSOLUTE(0xffa34);
  sha256Compute = ABSOLUTE(0xffa38);
  uECC_compute_public_key = ABSOLUTE(0xffa3c);
  uECC_valid_public_key = ABSOLUTE(0xffa40);
  uECC_make_key = ABSOLUTE(0xffa44);
  uECC_shared_secret = ABSOLUTE(0xffa48);
  bi_initialize = ABSOLUTE(0xffa4c);
  bi_read_from_byte = ABSOLUTE(0xffa50);
  bi_poly_mod2 = ABSOLUTE(0xffa54);
  bi_poly_mul = ABSOLUTE(0xffa58);
  trim = ABSOLUTE(0xffa5c);
  bi_wirte_to_byte = ABSOLUTE(0xffa60);
  bi_free = ABSOLUTE(0xffa64);
  bi_terminate = ABSOLUTE(0xffa68);
  uECC_vli_isZero = ABSOLUTE(0xffa6c);
  uECC_vli_modSquare_fast = ABSOLUTE(0xffa70);
  uECC_vli_modMult_fast = ABSOLUTE(0xffa74);
  uECC_vli_modAdd = ABSOLUTE(0xffa78);
  uECC_vli_modSub = ABSOLUTE(0xffa7c);
  uECC_vli_testBit = ABSOLUTE(0xffa80);
  uECC_vli_add = ABSOLUTE(0xffa84);
  uECC_vli_rshift1 = ABSOLUTE(0xffa88);
  uECC_vli_set = ABSOLUTE(0xffa8c);
  uECC_vli_sub = ABSOLUTE(0xffa90);
  uECC_vli_cmp_unsafe = ABSOLUTE(0xffa94);
  uECC_set_rng = ABSOLUTE(0xffa98);

  /* SHA256，直接到函数体，非entry模式 */
  sha256Init = ABSOLUTE(0xf0340);
  sha256Update = ABSOLUTE(0xef9a0);
  sha256Final = ABSOLUTE(0xefa00);

  get_cvsd_codec_ops = ABSOLUTE(0xffa9c);
  dns_16k_data = ABSOLUTE(0xe0270);
 
#if CONFIG_BT_CTRLER_IN_MASK
  bt_mask_cb_init = ABSOLUTE(0xffaa0);
  bt_lmp_varible_init = ABSOLUTE(0xffaa4);
  set_config_lmp_connection_num = ABSOLUTE(0xffaa8);
  lmp_cmd_is_match_size = ABSOLUTE(0xffaac);
  make_xor = ABSOLUTE(0xffab0);
  lmp_send_event_encryption_change = ABSOLUTE(0xffab4);
  lmp_send_event_role_change = ABSOLUTE(0xffab8);
  lmp_send_event_link_key_notification = ABSOLUTE(0xffabc);
  lmp_send_event_connection_request = ABSOLUTE(0xffac0);
  lmp_send_event_link_request = ABSOLUTE(0xffac4);
  lmp_send_event_auth_complete = ABSOLUTE(0xffac8);
  lmp_send_event_change_link_key_complete = ABSOLUTE(0xffacc);
  lmp_send_event_connection_complete = ABSOLUTE(0xffad0);
  lmp_send_event_mode_change = ABSOLUTE(0xffad4);
  lmp_conn_for_handle = ABSOLUTE(0xffad8);
  lmp_conn_for_address = ABSOLUTE(0xffadc);
  get_other_conn_esco = ABSOLUTE(0xffae0);
  lmp_get_other_conn = ABSOLUTE(0xffae4);
  lmp_get_enter_esco_conn = ABSOLUTE(0xffae8);
  lmp_check_exit_esco_conn = ABSOLUTE(0xffaec);
  lmp_esco_conn_for_handle = ABSOLUTE(0xffaf0);
  lmp_esco_rejust_establish = ABSOLUTE(0xffaf4);
  lmp_conn_for_link = ABSOLUTE(0xffaf8);
  lmp_private_remote_addr_for_handler = ABSOLUTE(0xffafc);
  lmp_private_handler_for_remote_addr = ABSOLUTE(0xffb00);
  check_lmp_for_addr = ABSOLUTE(0xffb04);
  lmp_get_tws_phone_addr = ABSOLUTE(0xffb08);
  lmp_conn_for_active_state = ABSOLUTE(0xffb0c);
  get_lmp_connection_esco_link = ABSOLUTE(0xffb10);
  lmp_broadcase_encrytion_enbale = ABSOLUTE(0xffb14);
  lmp_connection_esco_open = ABSOLUTE(0xffb18);
  lmp_setup_complete = ABSOLUTE(0xffb1c);
  lmp_conn_remote_address = ABSOLUTE(0xffb20);
  lmp_rx_features_req_ext = ABSOLUTE(0xffb24);
  lmp_rx_features_res_ext = ABSOLUTE(0xffb28);
  lmp_rx_feature_req = ABSOLUTE(0xffb2c);
  lmp_rx_features_res = ABSOLUTE(0xffb30);
  lmp_rx_ping_req = ABSOLUTE(0xffb34);
  lmp_rx_ping_res = ABSOLUTE(0xffb38);
  lmp_rx_version_req = ABSOLUTE(0xffb3c);
  lmp_rx_version_res = ABSOLUTE(0xffb40);
  lmp_rx_name_req = ABSOLUTE(0xffb44);
  lmp_rx_name_res = ABSOLUTE(0xffb48);
  lmp_connection_esco_wait_send_max_slot = ABSOLUTE(0xffb4c);
  lmp_tx_max_slot = ABSOLUTE(0xffb50);
  lmp_rx_max_slot = ABSOLUTE(0xffb54);
  lmp_rx_max_slot_req = ABSOLUTE(0xffb58);
  lmp_rx_accepted_max_slot_req = ABSOLUTE(0xffb5c);
  lmp_rx_not_accepted_max_slot_req = ABSOLUTE(0xffb60);
  lmp_rx_timing_accuracy_req = ABSOLUTE(0xffb64);
  lmp_rx_timing_accuracy_res = ABSOLUTE(0xffb68);
  lmp_tx_timing_accuracy_req = ABSOLUTE(0xffb6c);
  lmp_tx_qos_req = ABSOLUTE(0xffb70);
  lmp_tx_clkoffset_req = ABSOLUTE(0xffb74);
  lmp_rx_clkoffset_req = ABSOLUTE(0xffb78);
  lmp_rx_clkoffset_res = ABSOLUTE(0xffb7c);
  lmp_rx_detch = ABSOLUTE(0xffb80);
  lmp_tx_detch = ABSOLUTE(0xffb84);
  lmp_send_aclu_en = ABSOLUTE(0xffb88);
  lmp_tx_packet_type_table_req = ABSOLUTE(0xffb8c);
  lmp_rx_packet_type_table_req = ABSOLUTE(0xffb90);
  lmp_rx_accept_packet_type_table_req = ABSOLUTE(0xffb94);
  lmp_rx_not_accept_packet_type_table_req = ABSOLUTE(0xffb98);
  lmp_rx_keypress_notification = ABSOLUTE(0xffb9c);
  lmp_connection_ctl_slot = ABSOLUTE(0xffba0);
  lmp_send_max_slot = ABSOLUTE(0xffba4);
  lmp_conn_send_max_slot = ABSOLUTE(0xffba8);
  get_1to2_conn_max_slot = ABSOLUTE(0xffbac);
  lmp_master_tx_set_afh_user = ABSOLUTE(0xffbb0);
  lmp_rx_channel_classification = ABSOLUTE(0xffbb4);
  lmp_tx_channel_classification_req = ABSOLUTE(0xffbb8);
  lmp_rx_not_accepted_afh_req = ABSOLUTE(0xffbbc);
  lmp_rx_incr_power = ABSOLUTE(0xffbc0);
  lmp_rx_decr_power = ABSOLUTE(0xffbc4);
  lmp_rx_max_power = ABSOLUTE(0xffbc8);
  lmp_rx_min_power = ABSOLUTE(0xffbcc);
  lmp_rx_power_control = ABSOLUTE(0xffbd0);
  tx_power_req_cb = ABSOLUTE(0xffbd4);
  lmp_tx_power_req = ABSOLUTE(0xffbd8);
  lmp_set_supervision_timeout = ABSOLUTE(0xffbdc);
  lmp_rx_supervision_timeout = ABSOLUTE(0xffbe0);
  lmp_set_afh_timer = ABSOLUTE(0xffbe4);
  lmp_rx_set_afh = ABSOLUTE(0xffbe8);
  lmp_conn_set_afh_timer = ABSOLUTE(0xffbec);
  lmp_tx_disconnect = ABSOLUTE(0xffbf0);
  lmp_rx_accepted_qos_req = ABSOLUTE(0xffbf4);
  lmp_rx_not_accepted_qos_req = ABSOLUTE(0xffbf8);
  lmp_rx_quality_of_service = ABSOLUTE(0xffbfc);
  lmp_rx_quality_of_service_req = ABSOLUTE(0xffc00);
  lmp_rx_host_connection_req = ABSOLUTE(0xffc04);
  lmp_rx_setup_complete = ABSOLUTE(0xffc08);
  lmp_rx_accepted_host_connection_req = ABSOLUTE(0xffc0c);
  lmp_rx_not_accepted_host_connection_req = ABSOLUTE(0xffc10);
  lmp_tx_resume_encryption_req = ABSOLUTE(0xffc14);
  lmp_tx_supervision_timeout = ABSOLUTE(0xffc18);
  lmp_tx_features_req = ABSOLUTE(0xffc1c);
  lmp_tx_get_remote_addr_req = ABSOLUTE(0xffc20);
  lmp_tx_version_req = ABSOLUTE(0xffc24);
  lmp_tx_features_req_ext = ABSOLUTE(0xffc28);
  lmp_tx_name_req = ABSOLUTE(0xffc2c);
  lmp_tx_connection_req = ABSOLUTE(0xffc30);
  lmp_tx_setup_complete = ABSOLUTE(0xffc34);
  lmp_tx_max_slot_req = ABSOLUTE(0xffc38);
  lmp_tx_auto_rate = ABSOLUTE(0xffc3c);
  lmp_tx_channel_classification_time = ABSOLUTE(0xffc40);
  lmp_rx_channel_classification_req = ABSOLUTE(0xffc44);
  lmp_channel_classification_close = ABSOLUTE(0xffc48);
  lmp_rx_accepted_ext = ABSOLUTE(0xffc4c);
  lmp_rx_not_accepted_ext = ABSOLUTE(0xffc50);
  lmp_escape4_command_process = ABSOLUTE(0xffc54);
  lmp_rx_accepted = ABSOLUTE(0xffc58);
  lmp_rx_not_accepted = ABSOLUTE(0xffc5c);
  lmp_normal_command_process = ABSOLUTE(0xffc60);
  lmp_role_machine_handler_register = ABSOLUTE(0xffc64);
  lmp_role_machine = ABSOLUTE(0xffc68);
  lmp_tx_set_afh_req = ABSOLUTE(0xffc6c);
  lmp_tx_set_afh = ABSOLUTE(0xffc70);
  lmp_master_stage_conn = ABSOLUTE(0xffc74);
  lmp_master_wait_remote_pasue_enc_timeout = ABSOLUTE(0xffc78);
  lmp_master_stage_connected = ABSOLUTE(0xffc7c);
  lmp_master_stage_auth_with_pin_code = ABSOLUTE(0xffc80);
  lmp_master_stage_enc_start_by_local = ABSOLUTE(0xffc84);
  lmp_master_stage_enc_start_by_remote = ABSOLUTE(0xffc88);
  lmp_master_check_c = ABSOLUTE(0xffc8c);
  lmp_slave_start_enc_req = ABSOLUTE(0xffc90);
  lmp_slave_stage_conn = ABSOLUTE(0xffc94);
  lmp_slave_stage_auth_with_pin_code = ABSOLUTE(0xffc98);
  lmp_slave_stage_connected = ABSOLUTE(0xffc9c);
  lmp_slave_stage_role_switch_on_enc = ABSOLUTE(0xffca0);
  lmp_slave_stage_enc_start_by_local = ABSOLUTE(0xffca4);
  lmp_slave_stage_enc_start_by_remote = ABSOLUTE(0xffca8);
  lmp_slave_check_c = ABSOLUTE(0xffcac);
  lmp_slave_init = ABSOLUTE(0xffcb0);
  lmp_role_switch_completed = ABSOLUTE(0xffcb4);
  lmp_role_switch_misc_alloc = ABSOLUTE(0xffcb8);
  lmp_role_switch_misc_free = ABSOLUTE(0xffcbc);
  lmp_role_switch_detach = ABSOLUTE(0xffcc0);
  lmp_role_switch_machine = ABSOLUTE(0xffcc4);
  __role_switch_post = ABSOLUTE(0xffcc8);
  __role_switch_schdule = ABSOLUTE(0xffccc);
  __role_switch_probe = ABSOLUTE(0xffcd0);
  lmp_no_accepted_switch_req = ABSOLUTE(0xffcd4);
  lmp_rx_slot_offset = ABSOLUTE(0xffcd8);
  lmp_rx_switch_req = ABSOLUTE(0xffcdc);
  lmp_slave_tx_role_switch_req = ABSOLUTE(0xffce0);
  role_switch_req_timeout = ABSOLUTE(0xffce4);
  lmp_master_tx_role_switch_req = ABSOLUTE(0xffce8);
  lmp_tx_role_switch_req = ABSOLUTE(0xffcec);
  lmp_rx_accepted_switch_req = ABSOLUTE(0xffcf0);
  lmp_rx_not_accepted_switch_req = ABSOLUTE(0xffcf4);
  lmp_rx_role_switch_standby = ABSOLUTE(0xffcf8);
  lmp_master_stage_wait_remote_pasue_enc_and_role_switch = ABSOLUTE(0xffcfc);
  lmp_master_stage_role_switch_on_enc = ABSOLUTE(0xffd00);
  lmp_esco_conn_malloc = ABSOLUTE(0xffd04);
  lmp_create_esco_hci_handle = ABSOLUTE(0xffd08);
  lmp_esco_link_setup_post_cb = ABSOLUTE(0xffd0c);
  lmp_master_sco_response = ABSOLUTE(0xffd10);
  lmp_setup_sco = ABSOLUTE(0xffd14);
  lmp_hci_disconnect_sync_connection = ABSOLUTE(0xffd18);
  lmp_rx_accepted_sco_link_req = ABSOLUTE(0xffd1c);
  lmp_rx_sco_link_req = ABSOLUTE(0xffd20);
  lmp_slave_sco_conn_by_remote = ABSOLUTE(0xffd24);
  lmp_get_esco_conn_statu = ABSOLUTE(0xffd28);
  lmp_get_esco_link_statu = ABSOLUTE(0xffd2c);
  lmp_get_esco_link_addr = ABSOLUTE(0xffd30);
  lmp_pause_encryption_enbale = ABSOLUTE(0xffd34);
  lmp_simple_pair_enbale = ABSOLUTE(0xffd38);
  lmp_secure_connections_enbale = ABSOLUTE(0xffd3c);
  lmp_simple_pairing_fail = ABSOLUTE(0xffd40);
  lmp_free_encrypt = ABSOLUTE(0xffd44);
  lmp_tx_use_semi_permanent_key = ABSOLUTE(0xffd48);
  lmp_rx_not_accept_use_semi_permanent_key = ABSOLUTE(0xffd4c);
  lmp_rx_use_semi_permanent_key = ABSOLUTE(0xffd50);
  lmp_tx_temp_rand_key = ABSOLUTE(0xffd54);
  lmp_rx_temp_rand = ABSOLUTE(0xffd58);
  lmp_rx_temp_key = ABSOLUTE(0xffd5c);
  lmp_rx_in_rand = ABSOLUTE(0xffd60);
  lmp_in_rand_res = ABSOLUTE(0xffd64);
  lmp_rx_comb_key = ABSOLUTE(0xffd68);
  lmp_rx_combkey_tx_aurand = ABSOLUTE(0xffd6c);
  lmp_rx_combkey_tx_combkey = ABSOLUTE(0xffd70);
  lmp_send_even_link_request_dly = ABSOLUTE(0xffd74);
  lmp_tx_encryption_mode_req_dly = ABSOLUTE(0xffd78);
  lmp_rx_au_rand = ABSOLUTE(0xffd7c);
  lmp_legacy_rx_aurand_tx_sres_aurand = ABSOLUTE(0xffd80);
  lmp_legacy_rx_aurand_tx_sres = ABSOLUTE(0xffd84);
  lmp_secure_rx_aurand_tx_aurand_sres = ABSOLUTE(0xffd88);
  lmp_secure_rx_sres_tx_sres = ABSOLUTE(0xffd8c);
  lmp_secure_rx_aurand_tx_sres = ABSOLUTE(0xffd90);
  lmp_check_is_legacy_auth = ABSOLUTE(0xffd94);
  lmp_rx_not_accept_sres = ABSOLUTE(0xffd98);
  lmp_rx_sres = ABSOLUTE(0xffd9c);
  lmp_tx_in_rand = ABSOLUTE(0xffda0);
  lmp_rx_not_accepted_in_rand = ABSOLUTE(0xffda4);
  lmp_first_tx_combkey = ABSOLUTE(0xffda8);
  lmp_rx_not_accept_au_rand = ABSOLUTE(0xffdac);
  lmp_tx_au_rand = ABSOLUTE(0xffdb0);
  lmp_ecdh_publickey = ABSOLUTE(0xffdb4);
  lmp_build_publickey = ABSOLUTE(0xffdb8);
  lmp_authenticated_by_using_one_of_three_algorithms = ABSOLUTE(0xffdbc);
  lmp_io_capability_init = ABSOLUTE(0xffdc0);
  lmp_rx_io_capability_req = ABSOLUTE(0xffdc4);
  lmp_rx_encapsulated_payload = ABSOLUTE(0xffdc8);
  lmp_rx_pairing_confirm = ABSOLUTE(0xffdcc);
  lmp_f3_function = ABSOLUTE(0xffdd0);
  lmp_tx_dhkey_check = ABSOLUTE(0xffdd4);
  lmp_rx_pairing_number = ABSOLUTE(0xffdd8);
  lmp_rx_dhkey_check = ABSOLUTE(0xffddc);
  lmp_dhkey_check_accept = ABSOLUTE(0xffde0);
  lmp_dhkey_check = ABSOLUTE(0xffde4);
  lmp_rx_accepted_encapsulated_header = ABSOLUTE(0xffde8);
  lmp_rx_accepted_encapsulated_payload = ABSOLUTE(0xffdec);
  lmp_rx_encapsulated_header = ABSOLUTE(0xffdf0);
  lmp_rx_encryption_mode_req = ABSOLUTE(0xffdf4);
  lmp_rx_encryption_key_size_req = ABSOLUTE(0xffdf8);
  lmp_tx_encryption_key_size_mask_req = ABSOLUTE(0xffdfc);
  lmp_rx_encryption_key_size_mask_req = ABSOLUTE(0xffe00);
  lmp_rx_start_encryption_req = ABSOLUTE(0xffe04);
  lmp_rx_stop_encryption_req = ABSOLUTE(0xffe08);
  lmp_rx_pause_encryption_aes_req = ABSOLUTE(0xffe0c);
  lmp_rx_pause_encryption_req = ABSOLUTE(0xffe10);
  start_enc_req_prob_cb = ABSOLUTE(0xffe14);
  lmp_rx_resume_encryption_req = ABSOLUTE(0xffe18);
  lmp_tx_encryption_mode_req = ABSOLUTE(0xffe1c);
  lmp_rx_not_accepted_encryption_mode_req = ABSOLUTE(0xffe20);
  lmp_rx_accepted_encryption_mode_req = ABSOLUTE(0xffe24);
  lmp_tx_encryption_key_size_req = ABSOLUTE(0xffe28);
  lmp_rx_accepted_encryption_key_size_req = ABSOLUTE(0xffe2c);
  lmp_tx_start_encryption_req = ABSOLUTE(0xffe30);
  lmp_rx_accepted_start_encryption_req = ABSOLUTE(0xffe34);
  stop_enc_req_prob_cb = ABSOLUTE(0xffe38);
  lmp_tx_stop_encryption_req = ABSOLUTE(0xffe3c);
  lmp_rx_accepted_stop_encryption_req = ABSOLUTE(0xffe40);
  lmp_tx_pause_encryption_aes_req = ABSOLUTE(0xffe44);
  lmp_tx_pause_encryption_req = ABSOLUTE(0xffe48);
  lmp_tx_keypress_notification = ABSOLUTE(0xffe4c);
  lmp_tx_user_passkey_request_reply = ABSOLUTE(0xffe50);
  lmp_default_stage = ABSOLUTE(0xffe54);
  lmp_stage_wait_auth = ABSOLUTE(0xffe58);
  lmp_stage_connected_wait_link_key_reply = ABSOLUTE(0xffe5c);
  lmp_stage_conn_wait_link_key_reply = ABSOLUTE(0xffe60);
  lmp_stage_auth_finish = ABSOLUTE(0xffe64);
  lmp_stage_wait_sres = ABSOLUTE(0xffe68);
  lmp_stage_auth_with_link_key_by_remote = ABSOLUTE(0xffe6c);
  lmp_stage_auth_with_simple_pair_by_local = ABSOLUTE(0xffe70);
  lmp_stage_auth_with_link_key_by_local = ABSOLUTE(0xffe74);
  lmp_stage_auth_with_simple_pair_by_remote = ABSOLUTE(0xffe78);
  lmp_sniff_t_slot_attemp_reset = ABSOLUTE(0xffe7c);
  lmp_sniff_is_the_main_sniff = ABSOLUTE(0xffe80);
  lmp_sniff_misc_alloc = ABSOLUTE(0xffe84);
  lmp_sniff_misc_free = ABSOLUTE(0xffe88);
  lmp_sniff_initiated_check = ABSOLUTE(0xffe8c);
  lmp_sniff_detach = ABSOLUTE(0xffe90);
  lmp_esco_reset_sniff_param = ABSOLUTE(0xffe94);
  lmp_sniff_anchor_point_first = ABSOLUTE(0xffe98);
  lmp_sniff_anchor_point_preset = ABSOLUTE(0xffe9c);
  lmp_tx_sniff_req = ABSOLUTE(0xffea0);
  lmp_tx_unsniff_req = ABSOLUTE(0xffea4);
  lmp_sniff_slot_ali = ABSOLUTE(0xffea8);
  lmp_sniff_and_afh_offset_ali = ABSOLUTE(0xffeac);
  lmp_sniff_subrating_cnt = ABSOLUTE(0xffeb0);
  get_1to2_conn_exit_sniff = ABSOLUTE(0xffeb4);
  lmp_in_sniff_mode = ABSOLUTE(0xffeb8);
  check_all_conn_in_sniff = ABSOLUTE(0xffebc);
  lmp_rx_sniff_standby = ABSOLUTE(0xffec0);
  lmp_rx_unsniff_req_delay_do = ABSOLUTE(0xffec4);
  lmp_rx_accepted_unsniff_req = ABSOLUTE(0xffec8);
  lmp_rx_not_accepted_unsniff_req = ABSOLUTE(0xffecc);
  lmp_rx_not_accepted_sniff_req = ABSOLUTE(0xffed0);
  lmp_rx_accepted_sniff_req = ABSOLUTE(0xffed4);
  accepted_unsniff_req_cb = ABSOLUTE(0xffed8);
  lmp_rx_unsniff_req = ABSOLUTE(0xffedc);
  accepted_sniff_req_cb = ABSOLUTE(0xffee0);
  lmp_rx_sniff_req = ABSOLUTE(0xffee4);
  lmp_hci_exit_sniff_mode = ABSOLUTE(0xffee8);
  lmp_hci_sniff_mode = ABSOLUTE(0xffeec);
  tws_callback_lmp_enter_sniff = ABSOLUTE(0xffef0);
  tws_callback_lmp_exit_sniff = ABSOLUTE(0xffef4);
  lmp_name_stage_conn = ABSOLUTE(0xffef8);
  lmp_name_req_machine = ABSOLUTE(0xffefc);
  lmp_name_req_init = ABSOLUTE(0xfff00);
  btctler_bd_addr_cmp = ABSOLUTE(0xfff04);
  btctler_bd_addr_copy = ABSOLUTE(0xfff08);
  btctler_little_endian_read_16 = ABSOLUTE(0xfff0c);
  btctler_little_endian_read_24 = ABSOLUTE(0xfff10);
  btctler_little_endian_read_32 = ABSOLUTE(0xfff14);
  btctler_little_endian_store_16 = ABSOLUTE(0xfff18);
  btctler_little_endian_store_24 = ABSOLUTE(0xfff1c);
  btctler_little_endian_store_32 = ABSOLUTE(0xfff20);
  btctler_big_endian_read_16 = ABSOLUTE(0xfff24);
  btctler_big_endian_read_24 = ABSOLUTE(0xfff28);
  btctler_big_endian_read_32 = ABSOLUTE(0xfff2c);
  btctler_big_endian_store_16 = ABSOLUTE(0xfff30);
  btctler_big_endian_store_24 = ABSOLUTE(0xfff34);
  btctler_big_endian_store_32 = ABSOLUTE(0xfff38);
  btctler_reverse_bytes = ABSOLUTE(0xfff3c);
  btctler_reverse_24 = ABSOLUTE(0xfff40);
  btctler_reverse_32 = ABSOLUTE(0xfff44);
  btctler_reverse_48 = ABSOLUTE(0xfff48);
  btctler_reverse_56 = ABSOLUTE(0xfff4c);
  btctler_reverse_64 = ABSOLUTE(0xfff50);
  btctler_reverse_128 = ABSOLUTE(0xfff54);
  btctler_reverse_256 = ABSOLUTE(0xfff58);
  btctler_reverse_bd_addr = ABSOLUTE(0xfff5c);
  btctler_min = ABSOLUTE(0xfff60);
  btctler_max = ABSOLUTE(0xfff64);
  btctler_char_for_nibble = ABSOLUTE(0xfff68);
  btctler_nibble_for_char = ABSOLUTE(0xfff6c);
  btctler_uuid_add_bluetooth_prefix = ABSOLUTE(0xfff70);
  btctler_uuid_has_bluetooth_prefix = ABSOLUTE(0xfff74);
  btctler_uuid128_to_str = ABSOLUTE(0xfff78);
  btctler_bd_addr_to_str = ABSOLUTE(0xfff7c);
  btctler_sscanf_bd_addr = ABSOLUTE(0xfff80);
  btctler_atoi = ABSOLUTE(0xfff84);
  btctler_string_len_for_uint32 = ABSOLUTE(0xfff88);
  btctler_count_set_bits_uint32 = ABSOLUTE(0xfff8c);
  btctler_crc8 = ABSOLUTE(0xfff90);
  btctler_crc8_check = ABSOLUTE(0xfff94);
  btctler_crc8_calc = ABSOLUTE(0xfff98);
  btctler_get_rand_from_assign_range = ABSOLUTE(0xfff9c);
  btctler_memcmp_zero = ABSOLUTE(0xfffa0);
  btctler_CalcCrc32 = ABSOLUTE(0xfffa4);
  __vsprintf_len = ABSOLUTE(0xfffa8);
  __vsprintf = ABSOLUTE(0xfffac);
  lmp_bt_store_16 = ABSOLUTE(0xfffb0);
  lmp_bt_store_32 = ABSOLUTE(0xfffb4);
  lmp_net_store_16 = ABSOLUTE(0xfffb8);
  lmp_net_store_32 = ABSOLUTE(0xfffbc);
  lmp_bt_flip_addr = ABSOLUTE(0xfffc0);
  lmp_char_for_nibble = ABSOLUTE(0xfffc4);
  lmp_bd_addr_to_str = ABSOLUTE(0xfffc8);
  endian_change = ABSOLUTE(0xfffcc);
  __get_access_addr = ABSOLUTE(0xfffd0);
  bredr_clkn_after = ABSOLUTE(0xfffd4);
  bredr_clkn_before = ABSOLUTE(0xfffd8);
  bredr_clkn2offset = ABSOLUTE(0xfffdc);
  bredr_offset2clkn = ABSOLUTE(0xfffe0);
  classic_get_lt_addr = ABSOLUTE(0xfffe4);
  classic_get_lt_addr_behind = ABSOLUTE(0xfffe8);
  classic_put_lt_addr = ABSOLUTE(0xfffec);
  classic_change_lt_addr = ABSOLUTE(0xffff0);
  classic_get_all_lt_addr = ABSOLUTE(0xffff4);
  __read_fhs_packet = ABSOLUTE(0xffff8);
  __write_fhs_packet = ABSOLUTE(0xffffc);
  lmp_acl_link = ABSOLUTE(0x13bd6c);
  hci_param_rom = ABSOLUTE(0x13bdbc);
  gbredr_local_dev_rom = ABSOLUTE(0x13bdb8);
#endif

  _IRQ_MEM_ADDR = ABSOLUTE(0x13be00);
  _RAM_LIMIT_L = ABSOLUTE(0x100000);
  _RAM_LIMIT_H = ABSOLUTE(0x13c000);
  _MASK_USED_MEM_END = ABSOLUTE(0x13a720);
  _MASK_EXPORT_MEM_BEGIN = ABSOLUTE(0x13ba00);
  _MASK_EXPORT_MEM_SIZE = ABSOLUTE(0x3dc);
  _UBOOT_LOADER_RAM_START = ABSOLUTE(0x100000);
  _UBOOT_LOADER_RAM_END = ABSOLUTE(0x139a00);
  _UBOOT_LOADER_RAM_SIZE = ABSOLUTE(0x39a00);
  g_boot_soft_flag = ABSOLUTE(0x13ba04);
  irq_lock_cnt = ABSOLUTE(0x13ba98);
  efuse_page0 = ABSOLUTE(0x13ba8c);
  efuse_page1 = ABSOLUTE(0x13ba90);
  efuse_page2 = ABSOLUTE(0x13ba94);
  nvram_list = ABSOLUTE(0x13ba14);
  exception_irq_handler = ABSOLUTE(0xe0004);
